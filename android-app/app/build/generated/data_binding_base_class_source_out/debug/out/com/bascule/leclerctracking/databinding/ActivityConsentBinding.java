// Generated by view binder compiler. Do not edit!
package com.bascule.leclerctracking.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bascule.leclerctracking.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityConsentBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button acceptButton;

  @NonNull
  public final Button autoTestButton;

  @NonNull
  public final Button declineButton;

  @NonNull
  public final TextView descriptionText;

  @NonNull
  public final TextView permissionInfoText;

  @NonNull
  public final Button settingsButton;

  @NonNull
  public final TextView statusText;

  @NonNull
  public final TextView titleText;

  private ActivityConsentBinding(@NonNull ScrollView rootView, @NonNull Button acceptButton,
      @NonNull Button autoTestButton, @NonNull Button declineButton,
      @NonNull TextView descriptionText, @NonNull TextView permissionInfoText,
      @NonNull Button settingsButton, @NonNull TextView statusText, @NonNull TextView titleText) {
    this.rootView = rootView;
    this.acceptButton = acceptButton;
    this.autoTestButton = autoTestButton;
    this.declineButton = declineButton;
    this.descriptionText = descriptionText;
    this.permissionInfoText = permissionInfoText;
    this.settingsButton = settingsButton;
    this.statusText = statusText;
    this.titleText = titleText;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityConsentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityConsentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_consent, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityConsentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.acceptButton;
      Button acceptButton = ViewBindings.findChildViewById(rootView, id);
      if (acceptButton == null) {
        break missingId;
      }

      id = R.id.autoTestButton;
      Button autoTestButton = ViewBindings.findChildViewById(rootView, id);
      if (autoTestButton == null) {
        break missingId;
      }

      id = R.id.declineButton;
      Button declineButton = ViewBindings.findChildViewById(rootView, id);
      if (declineButton == null) {
        break missingId;
      }

      id = R.id.descriptionText;
      TextView descriptionText = ViewBindings.findChildViewById(rootView, id);
      if (descriptionText == null) {
        break missingId;
      }

      id = R.id.permissionInfoText;
      TextView permissionInfoText = ViewBindings.findChildViewById(rootView, id);
      if (permissionInfoText == null) {
        break missingId;
      }

      id = R.id.settingsButton;
      Button settingsButton = ViewBindings.findChildViewById(rootView, id);
      if (settingsButton == null) {
        break missingId;
      }

      id = R.id.statusText;
      TextView statusText = ViewBindings.findChildViewById(rootView, id);
      if (statusText == null) {
        break missingId;
      }

      id = R.id.titleText;
      TextView titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      return new ActivityConsentBinding((ScrollView) rootView, acceptButton, autoTestButton,
          declineButton, descriptionText, permissionInfoText, settingsButton, statusText,
          titleText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
