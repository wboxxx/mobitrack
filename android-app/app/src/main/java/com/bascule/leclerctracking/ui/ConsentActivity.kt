package com.bascule.leclerctracking.ui

import android.content.Intent
import android.os.Bundle
import android.provider.Settings
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import androidx.core.content.ContextCompat
import com.bascule.leclerctracking.databinding.ActivityConsentBinding
import com.bascule.leclerctracking.service.CrossAppTrackingService
import com.bascule.leclerctracking.utils.AccessibilityUtils

class ConsentActivity : AppCompatActivity() {
    
    private lateinit var binding: ActivityConsentBinding
    
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        binding = ActivityConsentBinding.inflate(layoutInflater)
        setContentView(binding.root)
        
        setupUI()
        checkPermissions()
    }
    
    private fun setupUI() {
        binding.apply {
            // Titre et description
            titleText.text = "Bascule Cross-App Tracking"
            descriptionText.text = """
                Cette application peut analyser vos interactions sur les apps e-commerce 
                pour am√©liorer votre exp√©rience d'achat.
                
                Apps support√©es:
                ‚Ä¢ E.Leclerc Drive
                ‚Ä¢ Carrefour
                ‚Ä¢ Auchan Drive  
                ‚Ä¢ Casino Drive
                ‚Ä¢ Amazon Shopping
                ‚Ä¢ Cdiscount
                ‚Ä¢ Monoprix
                
                Vos donn√©es restent priv√©es et anonymes.
            """.trimIndent()
            
            // Boutons d'action
            acceptButton.setOnClickListener {
                requestAccessibilityPermission()
            }
            
            declineButton.setOnClickListener {
                showDeclineDialog()
            }
            
            settingsButton.setOnClickListener {
                openAccessibilitySettings()
            }
            
            // Informations sur les permissions
            permissionInfoText.text = """
                Permissions requises:
                
                üîç Service d'Accessibilit√©
                Permet de d√©tecter les interactions dans les autres apps
                
                üîí Confidentialit√© Garantie
                ‚Ä¢ Aucune donn√©e personnelle collect√©e
                ‚Ä¢ Pas d'acc√®s aux mots de passe
                ‚Ä¢ Tracking anonyme uniquement
                ‚Ä¢ Donn√©es stock√©es localement
            """.trimIndent()
        }
    }
    
    private fun checkPermissions() {
        val isAccessibilityEnabled = AccessibilityUtils.isAccessibilityServiceEnabled(
            this, 
            CrossAppTrackingService::class.java
        )
        
        binding.apply {
            if (isAccessibilityEnabled) {
                statusText.text = "‚úÖ Service activ√© - Tracking cross-app fonctionnel"
                statusText.setTextColor(ContextCompat.getColor(this@ConsentActivity, android.R.color.holo_green_dark))
                acceptButton.text = "D√©sactiver le Service"
                acceptButton.setOnClickListener { openAccessibilitySettings() }
            } else {
                statusText.text = "‚ö†Ô∏è Service d√©sactiv√© - Activation requise"
                statusText.setTextColor(ContextCompat.getColor(this@ConsentActivity, android.R.color.holo_orange_dark))
                acceptButton.text = "Activer le Service"
            }
        }
    }
    
    private fun requestAccessibilityPermission() {
        val isEnabled = AccessibilityUtils.isAccessibilityServiceEnabled(
            this, 
            CrossAppTrackingService::class.java
        )
        
        if (!isEnabled) {
            showPermissionExplanation()
        } else {
            Toast.makeText(this, "Service d√©j√† activ√©!", Toast.LENGTH_SHORT).show()
        }
    }
    
    private fun showPermissionExplanation() {
        androidx.appcompat.app.AlertDialog.Builder(this)
            .setTitle("Activation du Service d'Accessibilit√©")
            .setMessage("""
                Pour fonctionner, Bascule a besoin d'acc√©der au service d'accessibilit√© Android.
                
                √âtapes:
                1. Ouvrir les Param√®tres d'Accessibilit√©
                2. Trouver "Bascule Cross-App Tracking"
                3. Activer le service
                4. Confirmer les permissions
                
                Ce service permet de d√©tecter vos interactions dans les apps e-commerce 
                pour am√©liorer l'analyse comportementale.
            """.trimIndent())
            .setPositiveButton("Ouvrir Param√®tres") { _, _ ->
                openAccessibilitySettings()
            }
            .setNegativeButton("Annuler", null)
            .show()
    }
    
    private fun openAccessibilitySettings() {
        try {
            val intent = Intent(Settings.ACTION_ACCESSIBILITY_SETTINGS)
            startActivity(intent)
            
            Toast.makeText(
                this, 
                "Cherchez 'Bascule Cross-App Tracking' dans la liste", 
                Toast.LENGTH_LONG
            ).show()
        } catch (e: Exception) {
            Toast.makeText(
                this, 
                "Impossible d'ouvrir les param√®tres d'accessibilit√©", 
                Toast.LENGTH_SHORT
            ).show()
        }
    }
    
    private fun showDeclineDialog() {
        androidx.appcompat.app.AlertDialog.Builder(this)
            .setTitle("Refus du Consentement")
            .setMessage("""
                Sans le service d'accessibilit√©, Bascule ne peut pas analyser 
                vos interactions dans les autres apps.
                
                Vous pouvez:
                ‚Ä¢ Utiliser uniquement le tracking intra-app
                ‚Ä¢ Activer le service plus tard
                ‚Ä¢ Fermer l'application
            """.trimIndent())
            .setPositiveButton("Mode Intra-App Seulement") { _, _ ->
                startIntraAppMode()
            }
            .setNegativeButton("Fermer l'App") { _, _ ->
                finish()
            }
            .setNeutralButton("Reconsid√©rer", null)
            .show()
    }
    
    private fun startIntraAppMode() {
        // Navigate to main tracking activity
        val intent = Intent(this, com.bascule.leclerctracking.MainActivity::class.java).apply {
            putExtra("mode", "intra_app_only")
            flags = Intent.FLAG_ACTIVITY_CLEAR_TOP
        }
        startActivity(intent)
        finish()
    }
    
    override fun onResume() {
        super.onResume()
        // V√©rifier les permissions √† chaque retour sur l'activit√©
        checkPermissions()
    }
}
